{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/Burger/BuildControls/BuildControls.module.css","hoc/Aux.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Aux","props","children","Layout","className","classes","Content","BurgerIngredient","ingredient","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Component","Burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","index","key","reduce","arr","el","concat","console","log","length","BuildControl","Label","label","Less","onClick","removed","disabled","More","added","controls","BuildControls","price","toFixed","cntrl","ingredientAdded","ingredientRemoved","INGREDIENTS_PRICE","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","addIngredientHandler","newCount","newIngredients","priceAddition","newPrice","setState","removeIngredients","oldCount","totalPrcie","disabledInfo","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fabf41c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2WLOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\"};","const Aux = (props) => props.children;\n\nexport default Aux;\n","import React from 'react';\n\nimport Aux from '../../hoc/Aux';\nimport classes from './Layout.module.css';\n\n\nconst Layout = (props) => { \n    return (\n      <Aux>\n        <div> Toolbar, Sidebar, Backdraw</div>\n        <main className={classes.Content}>\n          {props.children}\n        </main>\n      </Aux>\n    );\n}\n\nexport default Layout;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport classes from './BurgerIngredient.module.css';\n\nclass BurgerIngredient extends Component {\n  render() {\n        \n    let ingredient = null;\n\n    switch (this.props.type) {\n      case \"bread-bottom\":\n        ingredient = <div className={classes.BreadBottom}></div>;\n        break;\n      case \"bread-top\":\n        ingredient = (\n          <div className={classes.BreadTop}>\n            <div className={classes.Seeds1}></div>\n            <div className={classes.Seeds2}></div>\n          </div>\n        );\n        break;\n      case \"meat\":\n        ingredient = <div className={classes.Meat}> </div>;\n        break;\n      case \"cheese\":\n        ingredient = <div className={classes.Cheese}></div>;\n        break;\n      case \"bacon\":\n        ingredient = <div className={classes.Bacon}> </div>;\n        break;\n      case \"salad\":\n        ingredient = <div className={classes.Salad}></div>;\n        break;\n      default:\n        ingredient = null;\n    }\n\n    return ingredient;\n  }\n  \n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\n\nconst Burger = (props) =>{\n\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey =>{\n            return [...Array(props.ingredients[igKey])].map((_, index) =>{\n                return <BurgerIngredient key={igKey + index}\n                    type={igKey} />\n            })\n        })\n        .reduce((arr, el) =>{\n            return arr.concat(el);\n        }, []);\n    \n    console.log(transformedIngredients);\n    if(transformedIngredients.length === 0){\n        transformedIngredients = <p>Please start inserting Ingredients</p>\n    }\n    return(\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\"/>\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    )\n};\n\nexport default Burger;","import React from 'react';\n\nimport classes from './BuildControl.module.css';\n\nconst BuildControl = (props) =>{\n    return (\n    <div className={classes.BuildControl}> \n        <div className={classes.Label}>{props.label}</div>\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\n        <button className={classes.More} onClick={props.added}>More</button>\n    </div>\n    )\n};\n\nexport default BuildControl;\n","import React from 'react';\n\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\n\nconst controls = [\n    { label:'Salad', type:'salad'},\n    {label:'Bacon', type:'bacon'},\n    {label:'Cheese', type:'cheese'},\n    {label:'Meat', type:'meat'}\n];\n\nconst BuildControls = (props) =>{\n    return(\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong> </p>\n        {controls.map(cntrl =>{\n            return <BuildControl \n                key={cntrl.label} \n                label={cntrl.label}\n                added={()=>{props.ingredientAdded(cntrl.type)}} \n                removed={()=>props.ingredientRemoved(cntrl.type)} \n                disabled={props.disabled[cntrl.type]} />\n        })}\n    </div>\n    )\n};\n\nexport default BuildControls;\n","import React, {Component} from 'react';\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\n\nconst INGREDIENTS_PRICE = {\n    salad: .5,\n    cheese: .4,\n    meat: .3,\n    bacon: .7\n}\n\nclass BurgerBuilder extends Component{\n\n    state={\n        ingredients: {\n            salad: 0, \n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice :4\n\n    }\n\n    addIngredientHandler = (type) =>{\n        const oldCount = this.state.ingredients[type];\n        const newCount = oldCount + 1;\n        const newIngredients = {\n            ...this.state.ingredients\n        }\n        newIngredients[type]= newCount;\n        const priceAddition = INGREDIENTS_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({\n            ingredients: newIngredients,\n            totalPrice: newPrice\n        });\n    }\n\n    removeIngredients = (type) =>{\n        const oldCount = this.state.ingredients[type];\n        if(oldCount <= 0){\n            return ;\n        }\n        const newCount = oldCount - 1;\n        const newIngredients = {\n            ...this.state.ingredients\n        }\n        newIngredients[type]= newCount;\n        const priceAddition = INGREDIENTS_PRICE[type];\n        const oldPrice = this.state.totalPrcie;\n        const newPrice = oldPrice - priceAddition;\n        this.setState({\n            ingredients: newIngredients,\n            totalPrice: newPrice\n        });\n    }\n\n    render(){\n\n        const disabledInfo ={\n            ...this.state.ingredients\n        }\n        for(let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n        return (\n            <Aux>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls \n                    ingredientAdded={this.addIngredientHandler} \n                    ingredientRemoved={this.removeIngredients }\n                    disabled={disabledInfo} \n                    price={this.state.totalPrice} />\n            </Aux>\n        );\n    }\n} \n\nexport default BurgerBuilder;\n","import React from 'react'\nimport Layout from './components/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nfunction App() {\n  return (\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}